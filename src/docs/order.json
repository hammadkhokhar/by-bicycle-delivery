{
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://localhost:80",
        "description": "Development"
      }
    ],
    "info": {
      "description": "Order web service",
      "version": "1.0.0",
      "title": "By Bicyle Delivery API",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "hammad.khokhar@hotmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "paths": {
      "/api/v1/orders/quote": {
        "post": {
          "tags": ["Order"],
          "summary": "Get Quotation",
          "description": "Before placing an order, you must request a quotation. This will return a quoteId which you can use to book an order. The quote is valid for 1 hour.",
          "responses": {
            "201": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/quoteResponse"
                  },
                  "examples": {
                    "example": {
                      "summary": "Example of a quote response",
                      "value": {
                        "distance": 50,
                        "price": 9000, 
                        "quoteExpiry": 1704707349902,
                        "quoteId": "355936f2-f660-4220-913d-aeb368a542c7",
                        "status": "QUOTED"
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "$ref": "#/components/requestBodies/quote"
          }
        }
      },
      "/api/v1/orders/{quoteId}": {
        "post": {
          "tags": ["Order"],
          "summary": "Book Order",
          "description": "Book an order with a provided quoteId.",
          "responses": {
            "201": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingResponse"
                  }
                }
              }
            },
            "404": {
              "description": "No active quotation found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundResponse"
                  },
                  "examples": {
                    "example": {
                      "message": "No active quotation found",
                      "error": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "name": "quoteId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ]
        }
      },
      "/api/v1/orders/{orderId}": {

        "get": {
          "summary": "Get order details",
          "description": "Get details for a specific order.",
          "tags": ["Order"],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/OrderDetailsResponse"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "shipper": {
                      "shipperCountry": "DE",
                      "shipperCity": "Potsdam",
                      "shipperPostcode": "10115"
                    },
                    "consignee": {
                      "consigneeCountry": "PL",
                      "consigneeCity": "Słupsk",
                      "consigneePostcode": "76-200"
                    },
                    "shipperPickupOn": "2024-01-09T12:00:00.000Z",
                    "consigneeDeliverOn": "2024-01-13T00:00:00.000Z",
                    "distance": 50,
                    "price": 9000,
                    "quoteId": "463391ae-6e3e-431f-b9b5-62771037b8b6",
                    "status": "BOOKED"
                  }
                }
              },
            "404": {
              "description": "Order not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "NotFoundResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "error": {
              "type": "string"
            }
          }
        },
        "quote": {
          "type": "object",
          "properties": {
            "shipper": {
              "$ref": "#/components/schemas/Shipper"
            },
            "consignee": {
              "$ref": "#/components/schemas/Consignee"
            },
            "shipperPickupOn": {
              "type": "string",
              "format": "date-time"
            },
            "consigneeDeliverOn": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "shipper",
            "consignee",
            "shipperPickupOn",
            "consigneeDeliverOn"
          ]
        },
        "OrderDetailsResponse": {
          "type": "object",
          "properties": {
            "shipper": {
              "$ref": "#/components/schemas/Shipper"
            },
            "consignee": {
              "$ref": "#/components/schemas/Consignee"
            },
            "shipperPickupOn": {
              "type": "string",
              "format": "date-time"
            },
            "consigneeDeliverOn": {
              "type": "string",
              "format": "date"
            },
            "distance": {
              "type": "integer",
              "description": "Distance in km"
            },
            "price": {
              "type": "integer",
              "description": "Price in cents"
            },
            "quoteId": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string"
            }
          }
        },
        "Shipper": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "shipperCountry": {
              "type": "string"
            },
            "shipperCity": {
              "type": "string"
            },
            "shipperPostcode": {
              "type": "string"
            }
          },
          "required": ["shipperCountry", "shipperCity", "shipperPostcode"]
        },
        "Consignee": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "consigneeCountry": {
              "type": "string"
            },
            "consigneeCity": {
              "type": "string"
            },
            "consigneePostcode": {
              "type": "string"
            }
          },
          "required": ["consigneeCountry", "consigneeCity", "consigneePostcode"]
        },
        "OrderStatus": {
          "type": "string",
          "enum": ["QUOTED", "BOOKED", "AWAITING_PICKUP", "SHIPPED", "ENROUTE", "DELIVERED"]
        },
        "quoteResponse": {
          "type": "object",
          "properties": {
            "distance": {
              "type": "integer",
              "description": "Distance in km"
            },
            "price": {
              "type": "integer",
              "description": "Price in cents"
            },
            "quoteExpiry": {
              "type": "integer"
            },
            "quoteId": {
              "type": "string",
              "format": "uuid"
            },
            "status": {
              "type": "string"
            }
          }
        },
        "BookingResponse": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "quoteId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string"
              }
            }
        }
      },
      "requestBodies": {
        "quote": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/quote"
              },
              "examples": {
                "example": {
                  "summary": "Example of a quote request",
                  "value": {
                    "shipper": {
                      "address": {
                        "shipperCountry": "DE",
                        "shipperCity": "Berlin",
                        "shipperPostcode": "10115"
                      },
                      "shipperPickupOn": "2024-01-10T12:00:00Z"
                    },
                    "consignee": {
                      "address": {
                        "consigneeCountry": "PL",
                        "consigneeCity": "Słupsk",
                        "consigneePostcode": "76-200"
                      },
                      "consigneeDeliveryOn": "2024-01-13"
                    }
                  }
                }
              }
            }
          },
          "description": "Please make sure to follow the example provided. Distance between shipper and consignee must be between 3 and 300 km.",
          "required": true
        }
      },
      "securitySchemes": {},
      "links": {},
      "callbacks": {}
    },
    "security": []
  }
  